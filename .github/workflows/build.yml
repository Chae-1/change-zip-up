# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle And Push Docker hub

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: CheckOut code for create config file
      uses: actions/checkout@v4

    - name: Create application-prod.yml
      run: |
        echo "spring:" >> src/main/resources/application-prod.yml
        echo "  datasource:" >> src/main/resources/application-prod.yml
        echo "    url: ${{secrets.DB_URL}}" >> src/main/resources/application-prod.yml
        echo "    username: ${{secrets.DB_USERNAME}}" >> src/main/resources/application-prod.yml
        echo "    password: ${{secrets.DB_PASSWORD}}" >> src/main/resources/application-prod.yml
        echo "    driver-class-name: com.mysql.cj.jdbc.Driver" >> src/main/resources/application-prod.yml
        echo "  jpa:" >> src/main/resources/application-prod.yml
        echo "    hibernate:" >> src/main/resources/application-prod.yml
        echo "      ddl-auto: validate" >> src/main/resources/application-prod.yml
        echo "    show-sql: false" >> src/main/resources/application-prod.yml
        echo "    properties:" >> src/main/resources/application-prod.yml
        echo "      hibernate:" >> src/main/resources/application-prod.yml
        echo "        default_batch_fetch_size: 100" >> src/main/resources/application-prod.yml
        echo "domain:" >> src/main/resources/application-prod.yml
        echo "  address: ${{secrets.DOMAIN_ADDRESS}}" >> src/main/resources/application-prod.yml
        echo "target:" >> src/main/resources/application-prod.yml
        echo "  address: ${{secrets.TARGET_ADDRESS}}" >> src/main/resources/application-prod.yml
        echo "file:" >> src/main/resources/application-prod.yml
        echo "  upload-dir: src/main/resources/static/images" >> src/main/resources/application-prod.yml
        echo "  location: c\images" >> src/main/resources/application-prod.yml
    - name: Create application-secrets-prod.yml
      run: |
        echo "jwt:" >> src/main/resources/application-secrets-prod.yml
        echo "  access:" >> src/main/resources/application-secrets-prod.yml
        echo "    key: ${{secrets.JWT_ACCESS_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "  refresh:" >> src/main/resources/application-secrets-prod.yml
        echo "    key: ${{secrets.JWT_REFRESH_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "spring:" >> src/main/resources/application-secrets-prod.yml
        echo "  security:" >> src/main/resources/application-secrets-prod.yml
        echo "    oauth2:" >> src/main/resources/application-secrets-prod.yml
        echo "      client:" >> src/main/resources/application-secrets-prod.yml
        echo "        registration:" >> src/main/resources/application-secrets-prod.yml
        echo "          naver:" >> src/main/resources/application-secrets-prod.yml
        echo "            client-id: ${{secrets.NAVER_CLIENT_ID}}" >> src/main/resources/application-secrets-prod.yml
        echo "            client-secret: ${{secrets.NAVER_CLIENT_SECRET}}" >> src/main/resources/application-secrets-prod.yml
        echo "            authorization-grant-type: authorization_code" >> src/main/resources/application-secrets-prod.yml
        echo "            scope: name, email, nickname, gender, mobile" >> src/main/resources/application-secrets-prod.yml
        echo "            redirect-uri: ${{secrets.NAVER_REDIRECT_URI}}" >> src/main/resources/application-secrets-prod.yml
        echo "          kakao:" >> src/main/resources/application-secrets-prod.yml
        echo "            client-id: ${{secrets.KAKAO_CLIENT_ID}}" >> src/main/resources/application-secrets-prod.yml
        echo "            client-secret: ${{secrets.KAKAO_CLIENT_SECRET}}" >> src/main/resources/application-secrets-prod.yml
        echo "            redirect-uri: ${{secrets.KAKAO_REDIRECT_URI}}" >> src/main/resources/application-secrets-prod.yml
        echo "            authorization-grant-type: authorization_code" >> src/main/resources/application-secrets-prod.yml
        echo "            client-authentication-method: client_secret_post" >> src/main/resources/application-secrets-prod.yml
        echo "        provider:" >> src/main/resources/application-secrets-prod.yml
        echo "          naver:" >> src/main/resources/application-secrets-prod.yml
        echo "            authorization-uri: https://nid.naver.com/oauth2.0/authorize" >> src/main/resources/application-secrets-prod.yml
        echo "            token-uri: https://nid.naver.com/oauth2.0/token" >> src/main/resources/application-secrets-prod.yml
        echo "            user-name-attribute: response" >> src/main/resources/application-secrets-prod.yml
        echo "            user-info-uri: https://openapi.naver.com/v1/nid/me" >> src/main/resources/application-secrets-prod.yml
        echo "          kakao:" >> src/main/resources/application-secrets-prod.yml
        echo "            authorization-uri: https://kauth.kakao.com/oauth/authorize" >> src/main/resources/application-secrets-prod.yml
        echo "            token-uri: https://kauth.kakao.com/oauth/token" >> src/main/resources/application-secrets-prod.yml
        echo "            user-name-attribute: id" >> src/main/resources/application-secrets-prod.yml
        echo "            user-info-uri: https://kapi.kakao.com/v2/user/me" >> src/main/resources/application-secrets-prod.yml

        echo "  mail:" >> src/main/resources/application-secrets-prod.yml
        echo "    host: ${{secrets.MAIL_HOST}}" >> src/main/resources/application-secrets-prod.yml
        echo "    port: 587" >> src/main/resources/application-secrets-prod.yml
        echo "    username: ${{secrets.MAIL_USERNAME}}" >> src/main/resources/application-secrets-prod.yml
        echo "    password: ${{secrets.MAIL_PASSWORD}}" >> src/main/resources/application-secrets-prod.yml
        echo "    properties:" >> src/main/resources/application-secrets-prod.yml
        echo "      mail:" >> src/main/resources/application-secrets-prod.yml
        echo "        smtp:" >> src/main/resources/application-secrets-prod.yml
        echo "          auth: true" >> src/main/resources/application-secrets-prod.yml
        echo "          starttls.enable: true" >> src/main/resources/application-secrets-prod.yml
        echo "          connectiontimeout: 5000" >> src/main/resources/application-secrets-prod.yml
        echo "          timeout: 5000" >> src/main/resources/application-secrets-prod.yml
        echo "          writetimeout: 5000" >> src/main/resources/application-secrets-prod.yml

        echo "iamport:" >> src/main/resources/application-secrets-prod.yml
        echo "  api-key: ${{secrets.IAM_PORT_API_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "  secret-key: ${{secrets.IAM_PORT_SECRET_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "aws:" >> src/main/resources/application-secrets-prod.yml
        echo "  s3:" >> src/main/resources/application-secrets-prod.yml
        echo "    access-key: ${{secrets.S3_ACCESS_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "    secret-key: ${{secrets.S3_SECRET_KEY}}" >> src/main/resources/application-secrets-prod.yml
        echo "    region: ${{secrets.S3_REGION}}" >> src/main/resources/application-secrets-prod.yml
        echo "    name: ${{secrets.S3_NAME}}" >> src/main/resources/application-secrets-prod.yml
      
      

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_LOGIN_ID }}" --password-stdin

    - name: Build Docker image
      run: |
        # 파일이 존재하는지 확인 후 빌드
        if [ -f src/main/resources/application-secrets-prod.yml ]; then
            docker build -t hyeongil100/changzipup-repo:latest
        else
            echo "application-secrets-prod.yml 파일이 존재하지 않습니다. 빌드가 중단됩니다."
            exit 1
        fi

    - name: Push Docker image to Docker Hub
      run: docker push hyeongil100/changzipup-repo:latest

