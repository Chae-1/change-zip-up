# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle And Push Docker hub

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: CheckOut code for create config file
      uses: actions/checkout@v4

    - name: Create application-prod.yml
      run: |
        cd ./src/main/resources
        touch ./application-prod.yml
        echo "${{secrets.PROD_PROPERTIES}}" > ./application-prod.yml
        touch ./application-secrets-prod.yml
        echo "${{secrets.SECRET_PROPERTIES}}" > ./application-secrets-prod.yml
      shell: bash

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_LOGIN_ID }}" --password-stdin

    - name: Build Docker image
      run: |
            docker build -t hyeongil100/changzipup-repo:latest
       

    - name: Push Docker image to Docker Hub
      run: docker push hyeongil100/changzipup-repo:latest

